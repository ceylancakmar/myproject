
@{
    ViewBag.Title = "Anasayfa";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<img src="~/Content/img/2.png" alt=" resim" class="img-left" />

<p>
    ASP.NET MVC NEDİR?

    ASP.NET MVC, ASP.NET'e MVC tasarım modeli için mükemmel destek
    sağlayan bir çerçevedir. ASP.NET MVC'nin nasıl çalıştığını anlamak
    istiyorsanız, MVC'yi net bir şekilde anlamanız gerekir.
    MVC uygulama modellerini üç bölüme ayırır; model, kontrolör ve görünüm.

    Model; uygulama verilerinin ve durumunun depolanmasına yardımcı olur.
    Bu bir veritabanı ya da bir XML dosyası da olabilir.

    Görünüm; web sitenizin ziyaretçileri tarafından verileri görmek için
    kullanılan bir kullanıcı arayüzü olarak kabul edilir. ASPX sayfaları
    normalde ASP.NET MVC uygulamasında görünüm görüntülemek için kullanılır.

    Kontrolör; kullanıcının web sitesi ile etkileşime girme sorumluluğunu
    taşır. Ayrıca, görüntülenmesi gereken görüş türünün belirlenmesi için kullanılır. Ayrıca model iletişimi için de kullanılır.

    ASP.NET MVC'de MVC temelinde web uygulamaları oluşturmak için ASP.NET'in
    web formlarına alternatif bir çerçeve de sunulmaktadır. Çerçeve oldukça
    hafiftir ve ASP.NET'in halihazırda var olan özellikleri ile üyeliklere ve
    kalıp sayfalara dayalı kimlik doğrulama gibi entegre olan son derece test
    edilebilir bir sunum çerçevesi sağlar.

</p>


<p>
    Web üzerinde yaptığımız araştırmalarda, web tabanlı uygulamalar oluşturmak
    için ASP.NET MVC kullanmanız gerektiği sonucuna vardık ki nedenlerini de
    aşağıdaki gibi sıraladık;

    1 - SoC

    ASP.NET MVC'nin sağladığı en önemli avantajlardan biri model, iş mantığı,
    kullanıcı arabirimi ve verilerin çok temiz ve düzgün bir şekilde ayrılmasını sağlamasıdır.

    2 - Kontrol

    ASP.NET MVC kullanırken, JavaScript, HTML ve CSS üzerinde çok güçlü bir denetim sağlanır.

    3 - Test Edilebilirlik

    Test edilebilir ASP.NET MVC kullanarak, web tabanlı uygulamalarınızı daha iyi
    bir şekilde test edebilirsiniz. Buna ek olarak, MVC uygulamalar için test oluşturmanın
    geliştirilmesi için de güçlü bir desteğe sahip olmanızı sağlar. Bu nedenle, web tabanlı
    uygulamalarınızı kullanıcılara sunmadan önce test etmek isterseniz, ASP.NET MVC'yi
    kullanabilirsiniz.
</p>
<p>
    4 - Hafif Ağırlık

    Görüntüleme durumunu kullanmaz ve istenen bant genişliğini büyük ölçüde azaltmanıza
    yardımcı olur. Web'de şaşırtıcı ve kullanışlı MVC tabanlı uygulamalar oluşturmakla
    ilgileniyorsanız ASP.NET MVC tam size göre.

    5 - Kontrolün Görünümü ve Boyutu

    ASP.NET çerçeveleri genellikle görünüm durumu ve HTML denetiminin boyutu sorunlarıyla
    karşı karşıyadır. Görünüm, görüntülenen verilerin tamamını kaydeder ve bu şekilde HTML
    dosyaları büyür. Eğer yavaş bir internet bağlantınız varsa, web sitelerinin ve
    uygulamaların yüklenme sürelerinde gecikmeler gözlemlersiniz. ASP.NET MVC bir görünüm
    kavramı içermediği için ASP.NET MVC kullanarak yükleme süresi ile ilgili sorunlarla
    karşılaşmazsınız.

    6 - Bütünleşme

    ASP.NET MVC Entegrasyonu ASP.NET MVC çerçevesini Silverlight ile entegre ederek çok
    daha iyi avantajlar elde edebilirsiniz. İstemci önbelleğe alma özelliği, bu entegrasyon
    sayesinde kullanılabilir. Uygulamalarınızın daha hızlı çalışmasını sağlar ve
    uygulamalarınızın işlenmesi çoğu tarayıcılarda yapılır. İstemci ve sunucu tarafının
    yürütülmesi büyük ölçüde daha hızlı hale gelir. MVC'yi JQuery ile entegre ettiğinizde,
    web tarayıcılarında çalışan kodunuzu yazabilirsiniz. Yükün tamamını web sunucunuzdan
    uzaklaştırır.
</p>
<p>
    7 - Kullanılabilirlik

    ASP.NET MVC söz konusu olduğunda çok fazla teknik bilgiye sahip olmanız da gerekmez.
    Nasıl çalıştığını öğrendikten sonra keyfine varacaksınız. Çerçeve, diğer bir çok web
    sitesi formuna kıyasla daha iyidir. Bunun nedeni, web'in çalışma stratejilerine oldukça
    yakın çalışması ve kullanılması oldukça kolay ve ilginç olarak kabul edilmesidir.

    8 - API Hizmetleri

    ASP.NET MVC tarafından sağlanan bir diğer önemli avantaj, API web hizmetlerinin
    eklenmesine yardımcı olmasıdır. Eğer bu tür hizmetleri web tabanlı uygulamalarınıza
    eklemek istiyorsanız, mutlaka bu hizmetlerin nasıl çalıştığını öğrenmeniz gerekir.
</p>